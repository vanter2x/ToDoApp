@model MemosVM

@{
    ViewData["Title"] = "About";
}

<h2>ToDo App</h2>

<div class="new-cat">
    <input type="text" id="newcatname" />
    <a class="btn btn-primary" href="#" id="newcata">Add new category</a>
    <p>
        <span class="ajax-text"></span>
    </p>
</div>
<br />

@foreach (var item in Model.Categories)
{
    <div>
        <div class="panel panel-default col-md-4">
            <div class="panel-heading text-left">
                @item.Name
                <button class="pull-right">
                    @Html.ActionLink("Delete", "DeleteCategory", new { id = item.Id }, new { @class = "deleteCat" })
                </button>
            </div>
            @foreach (var mem in Model.Mementoes.Where(x => x.CategoryId == item.Id))
            {
                <div class="panel-body text-left @mem.Done" id="memText">
                    @mem.Text
                    <button class="btn pull-right">
                        @Html.ActionLink("Delete", "DeleteMemento", new { id = mem.Id }, new { @class = "deleteMem" })
                    </button>
                    <input type="checkbox" id="@mem.Id" class="memDone @mem.Done" checked="@mem.Done" />
                </div>
            }
            <div class="panel-body text-left " id="memText">
                <div class="new-memento" id="@item.Id">
                    <input class="memoName_@item.Id" type="text" />
                    <a class="btn btn-info memoName_@item.Id" id="@item.Id" href="#" onclick="Clicker(this.id)">Add memento</a>
                </div>
            </div>
        </div>
    </div>
}
<table class="table">
    <thead>
        <tr>
            <th></th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section Scripts
    {
    <script>
        $(function () {
            //Chenging memento Done(true/false) and update in Database
            var memDone = $("input.memDone");

            memDone.click(function () {
                var memText = $(this).parent();
                var memD = $(this);
                if (memText.hasClass('False')) {
                    memText.removeClass('False');
                    memText.addClass('True');
                } else {
                    memText.removeClass('True');
                    memText.addClass('False');
                }
                var urlUpdate = "/Home/UpdateMemento";
                var id = memD.attr("id");
                var done = memText.hasClass('True');
                $.post(urlUpdate, { id: id, done: done });
            })


            //Delete confirm
            $("body").on("click", "a.deleteMem", function () {
                if (!confirm("Confirm deletion of memento."))
                    return false;
            });
            $("body").on("click", "a.deleteCat", function () {
                if (!confirm("Confirm deletion of category."))
                    return false;
            });

            //Add new Category
            var newCatA = $("a#newcata");
            var newCatTextInput = $("#newcatname");
            var ajaxText = $("span.ajax-text");

            newCatTextInput.keyup(function (e) {
                if (e.keyCode == 13) {
                    newCatA.click();
                }
            })

            newCatA.click(function (e) {
                e.preventDefault();

                var catName = newCatTextInput.val();

                if (catName.length < 2) {
                    alert("Name of category must have min. 2 characters");
                    return false;
                }

                var url = "/Home/AddNewCategory"

                $.post(url,
                    { catName: catName },
                    function (data) {
                        var response = data.trim();
                        if (response == 'Exists') {
                            ajaxText.html("<span class='alert alert-danger'>This category exists!</span>")
                            setTimeout(function () {
                                ajaxText.fadeOut("fast");
                            },
                                2000);
                            return false;
                        } else {
                            ajaxText.html("<span class='alert alert-success'>The category has been added.</span>")
                            setTimeout(function () {
                                ajaxText.fadeOut("fast").done(location.reload());
                            },
                                1500);
                            newCatTextInput.val("");
                        }
                    })
            })
        })

        function Clicker(clicked_id) {
            //Add new Memento
            var catId = clicked_id;
            var inputName = "input.memoName_".concat(catId);
            var newMemTextInput = $(inputName);

            var memName = newMemTextInput.val();

            if (memName.length < 2) {
                alert("Name of memento must have min. 2 characters");
                return false;
            }

            var url = "/Home/AddNewMemento";

            $.post(url,
                { memName: memName, catId: catId },
                function () {
                    location.reload();
                })
        }
    </script>
}